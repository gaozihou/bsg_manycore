// auto-generated by bsg_ascii_to_rom.py from /home/paul/bsg_hammerhead/main_board/vu47p_bigblade_pod_cudalite/v/m_axi_lite_to_manycore/bsg_bladerunner_configuration.rom; do not modify
module bsg_bladerunner_configuration #(`BSG_INV_PARAM(width_p), `BSG_INV_PARAM(addr_width_p))
(input  [addr_width_p-1:0] addr_i
,output logic [width_p-1:0]      data_o
);
always_comb case(addr_i)
         0: data_o = width_p ' (32'b00000000000001100000000000000000); // 0x00060000
         1: data_o = width_p ' (32'b00000111001000100010000000100010); // 0x07222022
         2: data_o = width_p ' (32'b00000000000000000000000000011100); // 0x0000001C
         3: data_o = width_p ' (32'b00000000000000000000000000100000); // 0x00000020
         4: data_o = width_p ' (32'b00000000000000000000000000000001); // 0x00000001
         5: data_o = width_p ' (32'b00000000000000000000000000000001); // 0x00000001
         6: data_o = width_p ' (32'b00000000000000000000000000010000); // 0x00000010
         7: data_o = width_p ' (32'b00000000000000000000000000001000); // 0x00000008
         8: data_o = width_p ' (32'b00000000000000000000000000010000); // 0x00000010
         9: data_o = width_p ' (32'b00000000000000000000000000000000); // 0x00000000
        10: data_o = width_p ' (32'b00000000000000000000000000000111); // 0x00000007
        11: data_o = width_p ' (32'b00000000000000000000000000000111); // 0x00000007
        12: data_o = width_p ' (32'b00000000000000000000000000000000); // 0x00000000
        13: data_o = width_p ' (32'b01010111010101010011110001010011); // 0x57553C53
        14: data_o = width_p ' (32'b00111010000001011110000000000000); // 0x3A05E000
        15: data_o = width_p ' (32'b01011001011011100100010110100101); // 0x596E45A5
        16: data_o = width_p ' (32'b00000000000000000000000000001000); // 0x00000008
        17: data_o = width_p ' (32'b00000000000000000000000001000000); // 0x00000040
        18: data_o = width_p ' (32'b00000000000000000000000000100000); // 0x00000020
        19: data_o = width_p ' (32'b00000000000000000000000000100000); // 0x00000020
        20: data_o = width_p ' (32'b00000000000000000000000000100000); // 0x00000020
        21: data_o = width_p ' (32'b00000000000000000000000000100000); // 0x00000020
        22: data_o = width_p ' (32'b00000000000000000000000000100000); // 0x00000020
        23: data_o = width_p ' (32'b00000000000000000000000000000000); // 0x00000000
        24: data_o = width_p ' (32'b00000000000000000000000000000000); // 0x00000000
        25: data_o = width_p ' (32'b00110010010011010100001001001000); // 0x324D4248
        26: data_o = width_p ' (32'b00000000000000000000000000000010); // 0x00000002
        27: data_o = width_p ' (32'b00000100000000000000000000000000); // 0x04000000
        28: data_o = width_p ' (32'b00000000000000000000000000001111); // 0x0000000F
        29: data_o = width_p ' (32'b00000000000000000000000000000010); // 0x00000002
        30: data_o = width_p ' (32'b00000000000000000000000000000010); // 0x00000002
        31: data_o = width_p ' (32'b00000000000000000000000000000110); // 0x00000006
        32: data_o = width_p ' (32'b00000000000000000000000000000101); // 0x00000005
        33: data_o = width_p ' (32'b00000000000000000000000000001011); // 0x0000000B
        34: data_o = width_p ' (32'b00000000000000000000000000011010); // 0x0000001A
        35: data_o = width_p ' (32'b00000000000000000000000000011100); // 0x0000001C
        36: data_o = width_p ' (32'b00000000000000000000000000000101); // 0x00000005
        37: data_o = width_p ' (32'b00000000000000000000000000000000); // 0x00000000
   default: data_o = 'X;
endcase
endmodule
`BSG_ABSTRACT_MODULE(bsg_bladerunner_configuration)
